using Nethereum.Hex.HexTypes;
using Nethereum.Web3;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace HelloWorldEther
{
    class Program
    {
        const string address = "0x12890d2cce102216644c59daE5baed380d84830c";
        const string pass = "password";

        const string abi = @"[{""constant"":false,""inputs"":[{""name"":""name"",""type"":""string""}],""name"":""GetHello"",""outputs"":[{""name"":"""",""type"":""string""}],""payable"":false,""stateMutability"":""nonpayable"",""type"":""function""}]";

        const string byteCode = "608060405234801561001057600080fd5b50610283806100206000396000f3006080604052600436106100405763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663477914ba8114610045575b600080fd5b34801561005157600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261009e9436949293602493928401919081908401838280828437509497506101139650505050505050565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100d85781810151838201526020016100c0565b50505050905090810190601f1680156101055780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b80516060906101299060009060208501906101bc565b506000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156101b05780601f10610185576101008083540402835291602001916101b0565b820191906000526020600020905b81548152906001019060200180831161019357829003601f168201915b50505050509050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101fd57805160ff191683800117855561022a565b8280016001018555821561022a579182015b8281111561022a57825182559160200191906001019061020f565b5061023692915061023a565b5090565b61025491905b808211156102365760008155600101610240565b905600a165627a7a723058206bf14cb39cc03db2b0a9b467013916af515c05aea00f39446946b2bf39e471cd0029";


        static void Main(string[] args)
        {
            Test();
            Console.ReadLine();
        }
        static async void Test()
        {
            var web3 = new Web3("http://localhost:8545");
            /*var address = "0x12890d2cce102216644c59daE5baed380d84830c";
            var pass = "password";
            var abi = @"[{""constant"":true,""inputs"":[{""name"":""para"",""type"":""string""}],""name"":""GetHello"",""outputs"":[{""name"":"""",""type"":""string""}],""payable"":false,""stateMutability"":""view"",""type"":""function""},{""inputs"":[],""payable"":false,""stateMutability"":""nonpayable"",""type"":""constructor""}]";

            var byteCode = "608060405234801561001057600080fd5b506040805180820190915260048082527f706172610000000000000000000000000000000000000000000000000000000060209092019182526100559160009161005b565b506100f6565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061009c57805160ff19168380011785556100c9565b828001600101855582156100c9579182015b828111156100c95782518255916020019190600101906100ae565b506100d59291506100d9565b5090565b6100f391905b808211156100d557600081556001016100df565b90565b610177806101056000396000f3006080604052600436106100405763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663477914ba8114610045575b600080fd5b34801561005157600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261009e9436949293602493928401919081908401838280828437509497506101139650505050505050565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100d85781810151838201526020016100c0565b50505050905090810190601f1680156101055780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b5060408051808201909152600581527f48656c6c6f0000000000000000000000000000000000000000000000000000006020820152905600a165627a7a723058202e19ee63e96bc302bc25d3cde1f74c61631d35db3cbd334dbaead0bf7b34baf30029";
            */
            var accounts = await web3.Personal.UnlockAccount.SendRequestAsync(address, pass, 60);
            var receipt = await web3.Eth.DeployContract.EstimateGasAsync(abi, byteCode, address);
            var deloyContract = await web3.Eth.DeployContract.SendRequestAndWaitForReceiptAsync(abi, byteCode, address, new HexBigInteger(900000));
            var contract = web3.Eth.GetContract(abi, deloyContract.ContractAddress);

            var func = contract.GetFunction("GetHello");
            var result = await func.CallAsync<string>("my name");
            Console.WriteLine(result);
            Console.WriteLine("End");
            Console.ReadLine();
        }
    }
}
